name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

# Annule les runs précédents sur la même ref (évite surcharge)
concurrency:
    group: ci-${{ github.ref }}
    cancel-in-progress: true

permissions:
    contents: read
    pages: write
    id-token: write

jobs:
    prepare:
        name: Install & Cache
        runs-on: ubuntu-latest
        # (Optionnel) outputs si on ajoute un step nommé (non utilisé actuellement)
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"

            - name: Cache Expo
              uses: actions/cache@v4
              with:
                  path: |
                      ~/.expo
                      ~/.cache/expo
                  key: expo-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
                  restore-keys: |
                      expo-${{ runner.os }}-

            - name: Install dependencies
              run: npm ci

            - name: Verify Expo CLI (local)
              run: npx expo --version

    lint:
        name: Lint & Format Check
        runs-on: ubuntu-latest
        needs: prepare
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"
            - run: npm ci
            - name: Lint
              run: npm run lint

    format-check:
        name: Prettier Format Check
        runs-on: ubuntu-latest
        needs: prepare
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"
            - run: npm ci
            - name: Check formatting
              run: npm run check-format

    typecheck:
        name: TypeScript Check
        runs-on: ubuntu-latest
        needs: prepare
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"
            - run: npm ci
            - name: Type check
              run: npx tsc --noEmit --pretty false

    build-web:
        name: Build Expo Web
        runs-on: ubuntu-latest
        needs: [lint, format-check, typecheck]
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: 20
                  cache: "npm"
            - run: npm ci
            - name: Export web
              run: npx expo export --platform web
            - name: Upload artifact
              uses: actions/upload-artifact@v4
              with:
                  name: expo-web-dist
                  path: dist
                  if-no-files-found: error

    deploy-pages:
        name: Deploy to GitHub Pages (main)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        runs-on: ubuntu-latest
        needs: build-web
        permissions:
            contents: read
            pages: write
            id-token: write
        environment:
            name: github-pages
            url: ${{ steps.deployment.outputs.page_url }}
        steps:
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: expo-web-dist
                  path: dist
            - name: Setup Pages
              uses: actions/configure-pages@v5
            - name: Upload to Pages
              uses: actions/upload-pages-artifact@v3
              with:
                  path: dist
            - name: Deploy
              id: deployment
              uses: actions/deploy-pages@v4

    preview-pr:
        name: PR Preview Comment
        if: github.event_name == 'pull_request'
        runs-on: ubuntu-latest
        needs: build-web
        steps:
            - name: Download artifact
              uses: actions/download-artifact@v4
              with:
                  name: expo-web-dist
                  path: dist
            - name: Compute preview hash
              id: hash
              run: |
                  echo "sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT
            - name: Comment PR
              uses: marocchino/sticky-pull-request-comment@v2
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  header: web-preview
                  message: |
                      ✅ Export web généré.
                      Commit: `${{ steps.hash.outputs.sha }}`
                      (Pour afficher pragmatiquement un aperçu statique, active ensuite un workflow dédié si nécessaire.)
